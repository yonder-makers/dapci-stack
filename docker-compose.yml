version: "3.8"

include:
  - ./docker-compose.sonarqube.yml
  - ./github-runner/docker-compose.github-runner.yml
  - ./ubuntu/docker-compose.ubuntu.yml

services:
  portainer:
    restart: always
    image: portainer/portainer-ce:latest
    # ports:
    #   - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: volume
        source: portainer-data
        target: /data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN_NAME}`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  cadvisor:
    image: ${CADVISOR_IMAGE}
    privileged: true
    devices:
      - /dev/kmsg
    # ports:
    # - 8080:8080
    command:
      - "--port=8080"
      # - "--housekeeping_interval=30s"
      - "--docker_only=true"
      - "--disable_metrics=percpu,sched,tcp,udp,disk,diskIO,accelerator,hugetlb,referenced_memory,cpu_topology,resctrl,process"
      # - "--enable_metrics=cpu,cpuLoad,memory,memory_numa"
      # - "--enable_metrics=cpu,cpuLoad,cpuset,memory,memory_numa,network,oom_event,perf_event,process"
      # - "--enable_metrics=accelerator,advtcp,app,cpu,cpuLoad,cpu_topology,cpuset,disk,diskIO,hugetlb,memory,memory_numa,network,oom_event,percpu,perf_event,process,referenced_memory,resctrl,sched,tcp,udp."
    userns_mode: "host"
    volumes:
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /sys:/sys:ro
      - /var/run:/var/run:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /sys/fs/cgroup:/cgroup:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.${DOMAIN_NAME}`)"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
  
  prometheus:
    image: prom/prometheus
    # ports:
    #   - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - type: volume
        source: prometheus-data
        target: /prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN_NAME}`)'
      - "traefik.http.routers.prometheus.middlewares=dapci-auth@file"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana
    # ports:
    #   - "3000:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - type: volume
        source: grafana-data
        target: /var/lib/grafana
    env_file:
      - ./grafana/config.monitoring
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN_NAME}`)'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'


  traefik:
    image: traefik:latest
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/:/etc/traefik/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.traefik.middlewares=dapci-auth@file"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  whoami:
    image: traefik/whoami
    restart: unless-stopped
    # ports:
    #   - "2002:2002"
    command:
      - --port=2002
      - --name="I am DaPCI"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN_NAME}`)"
      - "traefik.http.services.whoami.loadbalancer.server.port=2002"

volumes:
  portainer-data:

  prometheus-data:

  grafana-data:
